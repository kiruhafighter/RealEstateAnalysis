services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: sqlserver
    environment:
      SA_PASSWORD: "SQL_Server_Password123!"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - ./sqlserver:/init
      - sqlserver_data:/var/opt/mssql
    entrypoint: /bin/bash /init/docker-entrypoint-init.sh
    healthcheck:
      test: [
        "CMD",
        "/opt/mssql-tools18/bin/sqlcmd",
        "-S", "localhost",
        "-U", "sa",
        "-P", "SQL_Server_Password123!",
        "-d", "RealEstateDB",
        "-C",
        "-Q",
        "SELECT 1"
      ]
      interval: 10s
      timeout: 5s
      retries: 15

  postgres:
    image: ankane/pgvector
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 2222
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
    - ./postgres/custom-entrypoint.sh:/custom-entrypoint.sh
    - postgres_data:/var/lib/postgresql/data
    entrypoint: ["/bin/bash", "/custom-entrypoint.sh"]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 15

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
      - ./ollama/models.txt:/models.txt
    entrypoint: >
      /bin/sh -c "
        ollama serve &
        sleep 5 &&
        cat /models.txt | xargs -n 1 ollama pull &&
        wait
      "
    healthcheck:
      test: ["CMD-SHELL", "ps aux | grep '[o]llama serve' > /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 15

  api:
    build:
      context: .
      dockerfile: RealEstateAnalysis.API/Dockerfile.api
    ports:
      - "5000:80"
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__RealEstateManagementDB=Server=sqlserver;Database=RealEstateDB;User Id=sa;Password=SQL_Server_Password123!;TrustServerCertificate=True;
      - Jwt__Key=thisisaverylongandsecurestring!@#$%^&*()
      - ASPNETCORE_URLS=http://+:80

  chatbot:
    build:
      context: ./AI-processing Services/real_estate_chatbot
      dockerfile: Dockerfile.chatbot
    container_name: chatbot
    ports:
      - "8000:8000"
    depends_on:
      sqlserver:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    env_file:
      - ./AI-processing Services/real_estate_chatbot/.env
    environment:
      - SQLSERVER_CONN_STR=Driver={ODBC Driver 17 for SQL Server};Server=sqlserver;Database=RealEstateDB;Uid=sa;Pwd=SQL_Server_Password123!;TrustServerCertificate=yes
      - POSTGRES_CONN_STR=postgresql://postgres:2222@postgres:5432/ai_property_db
      - APP_URL=http://client
      - OLLAMA_API=http://ollama:11434

  client:
    build:
      context: .
      dockerfile: RealEstateAnalysis.Client/Dockerfile.client
    ports:
      - "8080:80"
    depends_on:
      - api
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ApiBaseUrl=http://api
      - ChatApiBaseUrl=http://chatbot:8000
      - ASPNETCORE_URLS=http://+:80

  etl:
    build:
      context: ./AI-processing Services/property_etl_service
      dockerfile: Dockerfile.etl
    container_name: etl
    depends_on:
      sqlserver:
        condition: service_healthy
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    env_file:
      - ./AI-processing Services/property_etl_service/.env
    environment:
      - SQLSERVER_CONN_STR=Driver={ODBC Driver 17 for SQL Server};Server=sqlserver;Database=RealEstateDB;Uid=sa;Pwd=SQL_Server_Password123!;TrustServerCertificate=yes
      - POSTGRES_CONN_STR=postgresql://postgres:2222@postgres:5432/ai_property_db
      - OLLAMA_API=http://ollama:11434

  assign_images:
    build:
      context: ./AI-processing Services/assign_images_script
      dockerfile: Dockerfile.assign
    container_name: assign_images
    entrypoint: ["sleep", "infinity"]
    env_file:
      - ./AI-processing Services/assign_images_script/.env
    environment:
      - SQLSERVER_CONN_STR=Driver={ODBC Driver 17 for SQL Server};Server=sqlserver;Database=RealEstateDB;Uid=sa;Pwd=SQL_Server_Password123!;TrustServerCertificate=yes
      - IMAGES_DIR=/images
    volumes:
      - ./RealEstateAnalysis.Client/wwwroot/images:/images

  populate_properties:
    build:
      context: ./AI-processing Services/properties_populate_script
      dockerfile: Dockerfile.populate
    container_name: populate_properties
    entrypoint: ["sleep", "infinity"]
    env_file:
      - ./AI-processing Services/properties_populate_script/.env
    environment:
      - SQLSERVER_CONN_STR=Driver={ODBC Driver 17 for SQL Server};Server=sqlserver;Database=RealEstateDB;Uid=sa;Pwd=SQL_Server_Password123!;TrustServerCertificate=yes
      - OLLAMA_API=http://ollama:11434

  property_history:
    build:
      context: ./AI-processing Services/property_history_faking_script
      dockerfile: Dockerfile.history
    container_name: property_history
    entrypoint: ["sleep", "infinity"]
    env_file:
      - ./AI-processing Services/property_history_faking_script/.env
    environment:
      - SQLSERVER_CONN_STR=Driver={ODBC Driver 17 for SQL Server};Server=sqlserver;Database=RealEstateDB;Uid=sa;Pwd=SQL_Server_Password123!;TrustServerCertificate=yes

volumes:
  sqlserver_data:
  postgres_data:
  ollama_data: